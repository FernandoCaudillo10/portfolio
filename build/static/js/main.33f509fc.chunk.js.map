{"version":3,"sources":["pictures/1.jpg","pictures/family.jpg","pictures/dad.jpg","pictures/baby.jpg","pictures/2.jpg","App.js","AboutPage.js","ProjectsPage.js","ResumePage.js","Error404.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","selfie","alt","AboutPage","baby","family","dad","ProjectPage","ResumePage","Error404","Boolean","window","location","hostname","match","Routing","react_router_dom","to","react_router","exact","path","component","ProjectsPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33f509fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.c459e408.jpg\";","module.exports = __webpack_public_path__ + \"static/media/family.b38be4f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dad.9d662831.jpg\";","module.exports = __webpack_public_path__ + \"static/media/baby.e949911c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.fbeb4b2f.jpg\";","import React from 'react';\nimport './App.css';\nimport selfie from './pictures/1.jpg';\n\nconst App = () => {\n  return (\n  \t<div className='body'>\n\t\t<div className='selfieContainer'>\n\t\t\t<img src={selfie} alt=\"Fernando Caudillo\" className='selfie'/>\n\t\t</div>\n\t\t<div className='description'>\n\n\t\t\t<h2> Welcome! </h2>\n\n\t\t\t<h3>\n\t\t\t\tMy name is Fernando Javier Caudillo and I am highly motivated to advance technology to create a better living\n\t\t\t\tstandard for all. I am currently a student at an award-winning, three-year accelerated bachelor's \n\t\t\t\tcomputer science program called CSin3 at California State University, Monterey Bay. I love to apply my Software Engineering \n\t\t\t\tskills and degree in progress to any companie whose goal is to empower less served communities. \n\t\t\t\tI have a passion for problem-solving in online judge systems while encouraging \n\t\t\t\tothers to further develop their computer science and leadership skills. For the Summer of 2019 I will be a Software Engineering\n\t\t\t\tIntern at Google and located in New York City.\n\t\t\t</h3>\n\t\t\t<h3>\n\t\t\t\t\n\t\t\t</h3>\n\t\t\n\t\t</div>\n\t</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport contest from './pictures/2.jpg';\nimport family from './pictures/family.jpg';\nimport dad from './pictures/dad.jpg';\nimport baby from './pictures/baby.jpg';\nimport './AboutPage.css';\n\n\nconst AboutPage = () => {\n  return (\n  \t<div className=\"aboutMain\">\n\t\t<h1>Values</h1>\n\n\t\t<div className=\"pairContainer\">\n\t\t\t<img src={baby} className=\"image\"/>\n\t\t\t<h2> Dedicated </h2>\n\t\t</div>\n\n\t\t<div className=\"pairContainer\">\n\t\t\t<h2> Family-Oriented </h2>\n\t\t\t<img src={family} className=\"image\"/>\n\t\t</div>\n\n\t\t<div className=\"pairContainer\">\n\t\t\t<img src={dad} className=\"image\"/>\n\t\t\t<h2> Honest </h2>\n\t\t</div>\n\t</div>\n  );\n}\n\nexport default AboutPage;\n","import React from 'react';\n\nconst ProjectPage = () => {\n  return (\n  \t<div />\n  );\n}\n\nexport default ProjectPage;\n","import React from 'react';\n\nconst ResumePage = () => {\n  return (\n  \t<div />\n  );\n}\n\nexport default ResumePage;\n","import React from 'react';\n\nconst Error404 = () => {\n  return (\n  \t<div />\n  );\n}\n\nexport default Error404;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport App from './App';\nimport AboutPage from './AboutPage';\nimport ProjectsPage from './ProjectsPage';\nimport ResumePage from './ResumePage';\nimport Error404 from './Error404';\nimport * as serviceWorker from './serviceWorker';\n\nconst Routing = (\n\t<Router>\n\t\t<div className=\"content\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<h1> Fernando Caudillo </h1>\n\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t  <Link to=\"/\" className=\"link\">Home</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t  <Link to=\"/about\" className=\"link\">About Me</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t  <Link to=\"/projects\" className=\"link\">Projects</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t  <Link to=\"/resume\" className=\"link\">Resume</Link>\n\t\t\t\t\t</li>\n\t\t\t\t </ul>\n\t\t\t</div>\n\t\t\t<div className=\"main\">\n\t\t\t\t <Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={App} />\n\t\t\t\t\t<Route path=\"/about\" component={AboutPage} />\n\t\t\t\t\t<Route path=\"/projects\" component={ProjectsPage} />\n\t\t\t\t\t<Route path=\"/resume\" component={ResumePage} />\n\t\t\t\t\t<Route component={Error404} />\n\t\t\t\t </Switch>\t\n\t\t\t</div>\n\t\t\t<div className=\"footer\">\n\t\t\t\t<h3> Created using React, Node, and Heroku. &copy; 2019 </h3>\n\t\t\t</div>\n\t\t</div>\n\t</Router>\n);\n\nReactDOM.render(Routing, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}